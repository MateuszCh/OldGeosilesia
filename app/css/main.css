/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */@import url("https://fonts.googleapis.com/css?family=Open+Sans:400,700&subset=latin-ext");@import url("https://fonts.googleapis.com/css?family=Poiret+One&subset=latin-ext");html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}template,[hidden]{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}pre,code,kbd,samp{font-family:monospace, monospace;font-size:1em}dfn{font-style:italic}h1{font-size:2em;margin:.75em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}img{border-style:none}svg:not(:root){overflow:hidden}figure{margin:1.5em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,optgroup,select,textarea{font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html [type="button"],[type="reset"],[type="submit"]{-webkit-appearance:button}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type="button"]:-moz-focusring,[type="reset"]:-moz-focusring,[type="submit"]:-moz-focusring{outline:1px dotted ButtonText}input{overflow:visible}[type="checkbox"],[type="radio"]{box-sizing:border-box;padding:0}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button{height:auto}[type="search"]{-webkit-appearance:textfield;outline-offset:-2px}[type="search"]::-webkit-search-cancel-button,[type="search"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:0.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}fieldset{border:1px solid #c0c0c0;margin:0 2px;padding:0.35em 0.625em 0.75em}legend{box-sizing:border-box;display:table;max-width:100%;white-space:normal;color:inherit;padding:0}optgroup{font-weight:bold}textarea{overflow:auto}*{padding:0;margin:0}ul{list-style:none}header{position:fixed;width:100%;top:0;background-color:#312682;color:white;box-shadow:0 3px 5px 1px #130f33;z-index:1000}header #menu{cursor:pointer;position:absolute;top:30px;right:30px;width:25px;height:18px}header div.expanded .menu{background-color:transparent}header div.expanded .menu:after{-webkit-transform:rotate(45deg);transform:rotate(45deg)}header div.expanded .menu:before{-webkit-transform:rotate(-45deg);transform:rotate(-45deg);top:7px}header .menu{height:2px;width:25px;background-color:white;display:block;-webkit-transition:all .2s ease-in-out;transition:all .2s ease-in-out}@media only screen and (min-width: 768px){header .menu{display:none}}header .menu:after{top:7px}header .menu:after,header .menu:before{height:2px;width:25px;background-color:white;position:absolute;display:block;content:"";-webkit-transition:all .2s ease-in-out;transition:all .2s ease-in-out}header .menu:before{top:14px}@media only screen and (min-width: 1200px){header{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;justify-content:space-around}}header h1{text-align:center;font-family:"Poiret One",cursive;font-size:3rem;margin:.5rem}@media only screen and (min-width: 1200px){header h1{font-size:5rem}}header h1 a{color:white;text-decoration:none}footer{background-color:#312682;width:100%;display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;box-shadow:0 -3px 5px 1px #130f33}footer p{margin:0;padding:10px;text-align:center;font-size:1rem;color:white;font-family:"Open Sans",sans-serif}footer ul{display:-webkit-box;display:flex;flex-wrap:wrap;justify-content:space-around;padding:.5rem 0}footer ul li{width:30%;display:-webkit-box;display:flex;-webkit-box-pack:center;justify-content:center}@media only screen and (min-width: 768px){footer ul li{width:18%}}@media only screen and (min-width: 1200px){footer ul li{width:10%}}footer ul li img{max-width:100%}.mainNav li.active{background-color:#796dd4}.mainNav li.active ul li.active{background-color:#796dd4}.mainNav li.active ul li.active:hover{background-color:white}.mainNav{display:none}@media only screen and (min-width: 768px){.mainNav{display:-webkit-box;display:flex;justify-content:space-around;padding-bottom:.7rem;position:relative}}@media only screen and (min-width: 1200px){.mainNav{padding-bottom:0}}.mainNav a,.mainNav span{cursor:pointer;display:block;text-decoration:none;font-family:"Open Sans",sans-serif;color:inherit}.mainNav .mainListItems{-webkit-transition:all .4s ease-in-out;transition:all .4s ease-in-out}@media only screen and (min-width: 768px){.mainNav .mainListItems{background-color:#4032a9;-webkit-box-flex:1;flex-grow:1;text-align:center}.mainNav .mainListItems:hover{background-color:white;color:#221a5b}}.mainNav .mainListItems>a,.mainNav .mainListItems span{padding:.2rem 0;padding-left:.5rem;font-size:1.2rem}@media only screen and (min-width: 768px){.mainNav .mainListItems>a,.mainNav .mainListItems span{padding:.5rem 28px}}@media only screen and (min-width: 1200px){.mainNav .mainListItems>a,.mainNav .mainListItems span{padding:42px 28px}}@media only screen and (min-width: 1200px){.mainNav .parentGeoSlaskNav:hover ul{display:block}}.mainNav .geoslaskNav{display:none}@media only screen and (min-width: 768px){.mainNav .geoslaskNav{position:absolute;color:white;width:100%;left:0}}.mainNav .geoslaskNav a{padding-left:1rem;font-size:.9rem}@media only screen and (min-width: 768px){.mainNav .geoslaskNav a{padding-left:0;width:100%;font-size:1rem}}.mainNav .geoslaskNav li{-webkit-transition:all .2s ease-in-out;transition:all .2s ease-in-out}@media only screen and (min-width: 768px){.mainNav .geoslaskNav li{background-color:#312682;padding:5px 0;width:100%}.mainNav .geoslaskNav li:hover{background-color:white;color:#221a5b}}.bannerPhoto{height:100vh;background-image:url("../images/geosilesia.jpg");background-size:cover;background-position:10%;background-repeat:no-repeat}@media only screen and (min-width: 768px){.bannerPhoto{background-position:center}}.gallery{width:100%}.gallery h2{padding-top:80px;width:100%;margin:0 auto;font-family:"Poiret One",cursive;text-align:center;font-size:2rem;color:#221a5b}@media only screen and (min-width: 768px){.gallery h2{padding-top:130px;font-size:3rem}}@media only screen and (min-width: 768px){.gallery{min-height:calc(100vh - 76px)}}@media only screen and (min-width: 1200px){.gallery{min-height:calc(100vh - 42px)}}.gallery .photos{padding:0 0 10px 0;width:80%;margin:0 auto}@media only screen and (min-width: 768px){.gallery .photos{width:75%;display:-webkit-box;display:flex;padding-top:0;flex-wrap:wrap;justify-content:space-around}}.gallery .photos .figuryUp{-webkit-transform:scale(1);transform:scale(1)}.gallery .photos figure{position:relative;margin:20px 0;overflow:hidden;padding:5px;box-shadow:0 0 3px 3px #130f33;background-color:#2a206e}@media only screen and (min-width: 768px){.gallery .photos figure{width:30%;padding:5px;background-color:#f2f2f2;box-shadow:0 0 4px 4px #ccc}}@media only screen and (min-width: 1200px){.gallery .photos figure{-webkit-transform:scale(0);transform:scale(0);-webkit-transition:all 0.5s cubic-bezier(0.17, 0.67, 0.83, 0.67);transition:all 0.5s cubic-bezier(0.17, 0.67, 0.83, 0.67);width:14%}.gallery .photos figure:hover figcaption{display:-webkit-box;display:flex}.gallery .photos figure:hover img{-webkit-transform:scale(1.4);transform:scale(1.4)}}.gallery .photos figure img{width:100%;-webkit-transition:all .2s ease-in-out;transition:all .2s ease-in-out}@media only screen and (min-width: 768px){.gallery .photos figure img{-webkit-transform:scale(1.3);transform:scale(1.3)}}@media only screen and (min-width: 1200px){.gallery .photos figure img{-webkit-transform:scale(1);transform:scale(1)}}.gallery .photos figure figcaption{padding:10px 5px;display:-webkit-box;display:flex;position:absolute;color:white;background-color:rgba(42,32,110,0.9);z-index:50;bottom:0;left:0;right:0;text-align:center;font-family:"Poiret One",cursive;font-size:1rem;-webkit-box-align:center;align-items:center;-webkit-box-pack:center;justify-content:center;-webkit-transition:all .2s ease-in-out;transition:all .2s ease-in-out}@media only screen and (min-width: 1200px){.gallery .photos figure figcaption{padding:10px 5px;display:-webkit-box;display:flex;position:absolute;color:white;background-color:#2a206e;z-index:50;bottom:0;left:0;right:0;text-align:center;font-family:"Poiret One",cursive;font-size:1rem;-webkit-box-align:center;align-items:center;-webkit-box-pack:center;justify-content:center;-webkit-transition:all .2s ease-in-out;transition:all .2s ease-in-out;height:36px}}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
